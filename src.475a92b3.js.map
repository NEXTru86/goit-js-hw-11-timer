{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","pad","value","String","padStart","setInterval","currentTime","days","hours","mins","secs","Date","now","time","getTimeComponents","Math","floor","document","querySelector","textContent","timer","start"],"mappings":";;;AA2CA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3CA,QAAA,oBAEMA,IAAAA,EAyCN,WAxCwC,SAAA,EAAA,GAAvBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAC3BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAsC1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAnCI,MAAA,WAAQ,IAAA,EAAA,KAQKC,SAAAA,EAAIC,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KARrCC,YAAY,WACFC,IAkB4C,EAA3BC,EAAMC,EAAOC,EAAMC,EAlBpCJ,EAAcK,KAAKC,MAEnBC,EAQDC,SAAkBD,GACjBN,IAAAA,EAAON,EAAIc,KAAKC,MAAMH,EAAQ,QAC9BL,EAAQP,EAAIc,KAAKC,MAAOH,EAAQ,MAAyB,OACzDJ,EAAOR,EAAIc,KAAKC,MAAOH,EAAQ,KAAoB,MACnDH,EAAOT,EAAIc,KAAKC,MAAOH,EAAQ,IAAc,MAC5C,MAAA,CAAEN,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,GAbfI,CADK,EAAKd,WAAaM,GAiBbC,GAA2B,EAflCM,GAeON,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1CO,SAASC,cAAqCC,uBAAAA,YAAiBZ,GAAAA,OAAAA,GAC/DU,SAASC,cAAc,wBAAwBC,YAAiBX,GAAAA,OAAAA,GAChES,SAASC,cAAc,uBAAuBC,YAAiBV,GAAAA,OAAAA,GAC/DQ,SAASC,cAAc,uBAAuBC,YAAiBT,GAAAA,OAAAA,IAlBhE,SA6BX,EAAA,GANMU,EAAQ,IAAItB,EAAe,CAC7BC,SAAU,WACVC,WAAY,IAAIW,KAAK,kBAIzBS,EAAMC","file":"src.475a92b3.js","sourceRoot":"..\\src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n    constructor({selector, targetDate}) {\n        this.selector = selector;\n        this.targetDate = targetDate;\n    }\n\n    start() {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = this.targetDate - currentTime;\n            const time = getTimeComponents(deltaTime);\n            updateClockface(time);  \n        }, 1000);\n\n        function pad(value) {\n            return String(value).padStart(2, '0');\n        };\n\n        function getTimeComponents(time) {\n            const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n            const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n            const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n            const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n            return { days, hours, mins, secs };\n        };\n\n        function updateClockface({ days, hours, mins, secs }) {\n            document.querySelector(`[data-value=\"days\"]`).textContent = `${days}`;\n            document.querySelector('[data-value=\"hours\"]').textContent = `${hours}`;\n            document.querySelector('[data-value=\"mins\"]').textContent = `${mins}`;\n            document.querySelector('[data-value=\"secs\"]').textContent = `${secs}`;\n        };\n    };\n}\n\nconst timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2021'),\n    \n});\n\ntimer.start();"]}